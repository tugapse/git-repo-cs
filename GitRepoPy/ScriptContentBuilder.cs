using System.Text;

namespace GitRepoPy
{

    public static class ScriptContentBuilder
    {
        public static StringBuilder CreateCmdScriptContent(string projectDir)
        {
            // Generate the CMD wrapper content
            var cmdWrapperContent = new StringBuilder();
            cmdWrapperContent.AppendLine("@echo off");
            cmdWrapperContent.AppendLine($"rem This script was automatically generated by GitRepoPy (Version: {GlobalConfig.SCRIPT_VERSION}).");
            cmdWrapperContent.AppendLine($"rem It runs the Python application within its virtual environment.");
            cmdWrapperContent.AppendLine("");
            cmdWrapperContent.AppendLine($"set \"PROJECT_ROOT={projectDir}\"");
            cmdWrapperContent.AppendLine($"set \"VENV_DIR=%PROJECT_ROOT%\\.venv\"");
            cmdWrapperContent.AppendLine($"set \"VENV_ACTIVATE_BAT=%VENV_DIR%\\Scripts\\activate.bat\"");
            cmdWrapperContent.AppendLine("");
            cmdWrapperContent.AppendLine("if not exist \"%PROJECT_ROOT%\" (");
            cmdWrapperContent.AppendLine("    echo ERROR: Project directory '%PROJECT_ROOT%' not found or accessible.");
            cmdWrapperContent.AppendLine("    exit /b 1");
            cmdWrapperContent.AppendLine(")");
            cmdWrapperContent.AppendLine("");
            cmdWrapperContent.AppendLine("if not exist \"%VENV_ACTIVATE_BAT%\" (");
            cmdWrapperContent.AppendLine("    echo ERROR: Virtual environment activation script not found at '%VENV_ACTIVATE_BAT%'.");
            cmdWrapperContent.AppendLine("    echo Please ensure the virtual environment is correctly set up in '%VENV_DIR%'.");
            cmdWrapperContent.AppendLine("    exit /b 1");
            cmdWrapperContent.AppendLine(")");
            cmdWrapperContent.AppendLine("");
            cmdWrapperContent.AppendLine("rem Activate the virtual environment");
            cmdWrapperContent.AppendLine("call \"%VENV_ACTIVATE_BAT%\"");
            cmdWrapperContent.AppendLine("if %errorlevel% neq 0 (");
            cmdWrapperContent.AppendLine("    echo ERROR: Failed to activate virtual environment at '%VENV_ACTIVATE_BAT%'.");
            cmdWrapperContent.AppendLine("    exit /b 1");
            cmdWrapperContent.AppendLine(")");
            cmdWrapperContent.AppendLine("");

            // Check if main.py exists and execute it
            cmdWrapperContent.AppendLine($"set \"MAIN_PYTHON_SCRIPT=%PROJECT_ROOT%\\main.py\"");
            cmdWrapperContent.AppendLine("if not exist \"%MAIN_PYTHON_SCRIPT%\" (");
            cmdWrapperContent.AppendLine("    echo ERROR: Main Python script '%MAIN_PYTHON_SCRIPT%' not found in project directory.");
            cmdWrapperContent.AppendLine("    echo Please ensure 'main.py' exists in '%PROJECT_ROOT%' or adjust the generated script.");
            cmdWrapperContent.AppendLine("    exit /b 1");
            cmdWrapperContent.AppendLine(")");
            cmdWrapperContent.AppendLine("");
            cmdWrapperContent.AppendLine("rem Execute the main Python script with all passed arguments");
            cmdWrapperContent.AppendLine("python \"%MAIN_PYTHON_SCRIPT%\" %*"); // %* passes all arguments
            cmdWrapperContent.AppendLine("set \"RUN_STATUS=%errorlevel%\"");
            cmdWrapperContent.AppendLine("");
            cmdWrapperContent.AppendLine("rem Deactivate the virtual environment (optional, as the batch file's env is local)");
            cmdWrapperContent.AppendLine("rem if defined VIRTUAL_ENV (call deactivate)"); // VIRTUAL_ENV is set by activate.bat
            cmdWrapperContent.AppendLine("");
            cmdWrapperContent.AppendLine("exit /b %RUN_STATUS%");
            return cmdWrapperContent;
        }

        public static StringBuilder CreateShScriptContent(string projectDir, string localProjectMainPyPath)
        {
            // Generate the Bash script content directly into the targetBinExecutable file (no .sh extension)
            var shScriptContent = new StringBuilder();
            shScriptContent.AppendLine("#!/bin/bash");
            shScriptContent.AppendLine($"# This script was automatically generated by GitRepoPy (Version: {GlobalConfig.SCRIPT_VERSION}).");
            shScriptContent.AppendLine("# It acts as a wrapper to run the main Python application within its virtual environment.");
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine($"PROJECT_ROOT=\"{projectDir}\"");
            shScriptContent.AppendLine($"VENV_DIR=\"${{PROJECT_ROOT}}/.venv\"");
            shScriptContent.AppendLine($"MAIN_PYTHON_SCRIPT=\"{localProjectMainPyPath}\"");
            shScriptContent.AppendLine($"ACTIVATE_SCRIPT=\"${{VENV_DIR}}/bin/activate\""); // Unix-like venv path
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine("# Basic checks");
            shScriptContent.AppendLine("if [ ! -d \"$PROJECT_ROOT\" ]; then");
            shScriptContent.AppendLine("    echo \"ERROR: Project directory '$PROJECT_ROOT' not found or accessible.\" >&2");
            shScriptContent.AppendLine("    exit 1");
            shScriptContent.AppendLine("fi");
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine("if [ ! -f \"$MAIN_PYTHON_SCRIPT\" ]; then");
            shScriptContent.AppendLine("    echo \"ERROR: Main Python script '$MAIN_PYTHON_SCRIPT' not found in project directory.\" >&2");
            shScriptContent.AppendLine("    echo \"Please ensure 'main.py' exists in '$PROJECT_ROOT' or adjust the generated script.\" >&2");
            shScriptContent.AppendLine("    exit 1");
            shScriptContent.AppendLine("fi");
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine("if [ ! -f \"$ACTIVATE_SCRIPT\" ]; then");
            shScriptContent.AppendLine("    echo \"ERROR: Virtual environment activation script not found at '$ACTIVATE_SCRIPT'.\" >&2");
            shScriptContent.AppendLine("    echo \"Please ensure the virtual environment is correctly set up in '$VENV_DIR'.\" >&2");
            shScriptContent.AppendLine("    exit 1");
            shScriptContent.AppendLine("fi");
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine("# Activate the virtual environment");
            shScriptContent.AppendLine("source \"$ACTIVATE_SCRIPT\"");
            shScriptContent.AppendLine("if [ $? -ne 0 ]; then");
            shScriptContent.AppendLine("    echo \"ERROR: Failed to activate virtual environment at '$ACTIVATE_SCRIPT'.\" >&2");
            shScriptContent.AppendLine("    exit 1");
            shScriptContent.AppendLine("fi");
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine("# Execute the main Python script with all passed arguments");
            shScriptContent.AppendLine("python \"$MAIN_PYTHON_SCRIPT\" \"$@\"");
            shScriptContent.AppendLine("RUN_STATUS=$?");
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine("# Deactivate the virtual environment if the function exists");
            shScriptContent.AppendLine("if declare -f deactivate &>/dev/null; then");
            shScriptContent.AppendLine("    deactivate");
            shScriptContent.AppendLine("fi");
            shScriptContent.AppendLine("");
            shScriptContent.AppendLine("exit $RUN_STATUS");
            return shScriptContent;
        }

    }
}